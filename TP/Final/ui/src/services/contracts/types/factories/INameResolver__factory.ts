/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { INameResolver, INameResolverInterface } from "../INameResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INameResolver__factory {
  static readonly abi = _abi;
  static createInterface(): INameResolverInterface {
    return new Interface(_abi) as INameResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): INameResolver {
    return new Contract(address, _abi, runner) as unknown as INameResolver;
  }
}
