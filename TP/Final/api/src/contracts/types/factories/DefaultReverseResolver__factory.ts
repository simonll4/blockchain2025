/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DefaultReverseResolver,
  DefaultReverseResolverInterface,
} from "../DefaultReverseResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "ensAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d5338038062000d5383398181016040528101906200003791906200027c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6040518263ffffffff1660e01b8152600401620000f89190620002c9565b602060405180830381865afa15801562000116573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013c919062000317565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001f6578073ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b8152600401620001ae91906200035a565b6020604051808303816000875af1158015620001ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f49190620003a8565b505b5050620003da565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002308262000203565b9050919050565b6000620002448262000223565b9050919050565b620002568162000237565b81146200026257600080fd5b50565b60008151905062000276816200024b565b92915050565b600060208284031215620002955762000294620001fe565b5b6000620002a58482850162000265565b91505092915050565b6000819050919050565b620002c381620002ae565b82525050565b6000602082019050620002e06000830184620002b8565b92915050565b620002f18162000223565b8114620002fd57600080fd5b50565b6000815190506200031181620002e6565b92915050565b60006020828403121562000330576200032f620001fe565b5b6000620003408482850162000300565b91505092915050565b620003548162000223565b82525050565b600060208201905062000371600083018462000349565b92915050565b6200038281620002ae565b81146200038e57600080fd5b50565b600081519050620003a28162000377565b92915050565b600060208284031215620003c157620003c0620001fe565b5b6000620003d18482850162000391565b91505092915050565b61096980620003ea6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633f15457f14610046578063691f3431146100645780637737221314610094575b600080fd5b61004e6100b0565b60405161005b91906102eb565b60405180910390f35b61007e60048036038101906100799190610350565b6100d4565b60405161008b919061040d565b60405180910390f35b6100ae60048036038101906100a99190610564565b610174565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160205280600052604060002060009150905080546100f3906105ef565b80601f016020809104026020016040519081016040528092919081815260200182805461011f906105ef565b801561016c5780601f106101415761010080835404028352916020019161016c565b820191906000526020600020905b81548152906001019060200180831161014f57829003601f168201915b505050505081565b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3826040518263ffffffff1660e01b81526004016101ce919061062f565b602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f9190610688565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024657600080fd5b816001600085815260200190815260200160002090816102669190610861565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102b16102ac6102a78461026c565b61028c565b61026c565b9050919050565b60006102c382610296565b9050919050565b60006102d5826102b8565b9050919050565b6102e5816102ca565b82525050565b600060208201905061030060008301846102dc565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61032d8161031a565b811461033857600080fd5b50565b60008135905061034a81610324565b92915050565b60006020828403121561036657610365610310565b5b60006103748482850161033b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103b757808201518184015260208101905061039c565b60008484015250505050565b6000601f19601f8301169050919050565b60006103df8261037d565b6103e98185610388565b93506103f9818560208601610399565b610402816103c3565b840191505092915050565b6000602082019050818103600083015261042781846103d4565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610471826103c3565b810181811067ffffffffffffffff821117156104905761048f610439565b5b80604052505050565b60006104a3610306565b90506104af8282610468565b919050565b600067ffffffffffffffff8211156104cf576104ce610439565b5b6104d8826103c3565b9050602081019050919050565b82818337600083830152505050565b6000610507610502846104b4565b610499565b90508281526020810184848401111561052357610522610434565b5b61052e8482856104e5565b509392505050565b600082601f83011261054b5761054a61042f565b5b813561055b8482602086016104f4565b91505092915050565b6000806040838503121561057b5761057a610310565b5b60006105898582860161033b565b925050602083013567ffffffffffffffff8111156105aa576105a9610315565b5b6105b685828601610536565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061060757607f821691505b60208210810361061a576106196105c0565b5b50919050565b6106298161031a565b82525050565b60006020820190506106446000830184610620565b92915050565b60006106558261026c565b9050919050565b6106658161064a565b811461067057600080fd5b50565b6000815190506106828161065c565b92915050565b60006020828403121561069e5761069d610310565b5b60006106ac84828501610673565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106da565b61072186836106da565b95508019841693508086168417925050509392505050565b6000819050919050565b600061075e61075961075484610739565b61028c565b610739565b9050919050565b6000819050919050565b61077883610743565b61078c61078482610765565b8484546106e7565b825550505050565b600090565b6107a1610794565b6107ac81848461076f565b505050565b5b818110156107d0576107c5600082610799565b6001810190506107b2565b5050565b601f821115610815576107e6816106b5565b6107ef846106ca565b810160208510156107fe578190505b61081261080a856106ca565b8301826107b1565b50505b505050565b600082821c905092915050565b60006108386000198460080261081a565b1980831691505092915050565b60006108518383610827565b9150826002028217905092915050565b61086a8261037d565b67ffffffffffffffff81111561088357610882610439565b5b61088d82546105ef565b6108988282856107d4565b600060209050601f8311600181146108cb57600084156108b9578287015190505b6108c38582610845565b86555061092b565b601f1984166108d9866106b5565b60005b82811015610901578489015182556001820191506020850194506020810190506108dc565b8683101561091e578489015161091a601f891682610827565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220016a0f88d7ddd34f0c66dadf05df1662c09593dc577a98602280c8d23b85ea6364736f6c63430008130033";

type DefaultReverseResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefaultReverseResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefaultReverseResolver__factory extends ContractFactory {
  constructor(...args: DefaultReverseResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ensAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ensAddr, overrides || {});
  }
  override deploy(
    ensAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ensAddr, overrides || {}) as Promise<
      DefaultReverseResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DefaultReverseResolver__factory {
    return super.connect(runner) as DefaultReverseResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefaultReverseResolverInterface {
    return new Interface(_abi) as DefaultReverseResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DefaultReverseResolver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DefaultReverseResolver;
  }
}
