/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PublicResolver,
  PublicResolverInterface,
} from "../PublicResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "_ens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
    ],
    name: "ABIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "AddrChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAuthorised",
        type: "bool",
      },
    ],
    name: "AuthorisationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "ContenthashChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "InterfaceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "PubkeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "indexedKey",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "TextChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentTypes",
        type: "uint256",
      },
    ],
    name: "ABI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorisations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "contenthash",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "interfaceImplementer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "pubkey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "contentType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setABI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "nodeAddr",
        type: "address",
      },
    ],
    name: "setAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "setContenthash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "implementer",
        type: "address",
      },
    ],
    name: "setInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "nodeName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "y",
        type: "bytes32",
      },
    ],
    name: "setPubkey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "text",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorize",
        type: "bool",
      },
    ],
    name: "setAuthorisation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200261b3803806200261b8339818101604052810190620000379190620000fd565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b6000620000c582620000a4565b9050919050565b620000d781620000b8565b8114620000e357600080fd5b50565b600081519050620000f781620000cc565b92915050565b6000602082840312156200011657620001156200007f565b5b60006200012684828501620000e6565b91505092915050565b6124dc806200013f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806359d1d43c116100a2578063bc1c58d111610071578063bc1c58d1146102d9578063c869023314610309578063d5fa2b001461033a578063e59d895d14610356578063f86bc879146103725761010b565b806359d1d43c14610241578063623195b014610271578063691f34311461028d57806377372213146102bd5761010b565b806329cd62ea116100de57806329cd62ea146101bd578063304e6ade146101d95780633b3b57de146101f55780633e9ce794146102255761010b565b806301ffc9a71461011057806310f13a8c14610140578063124a319c1461015c5780632203ab561461018c575b600080fd5b61012a60048036038101906101259190611614565b6103a2565b604051610137919061165c565b60405180910390f35b61015a60048036038101906101559190611712565b6103b4565b005b610176600480360381019061017191906117a7565b610462565b6040516101839190611828565b60405180910390f35b6101a660048036038101906101a19190611879565b610859565b6040516101b4929190611958565b60405180910390f35b6101d760048036038101906101d29190611988565b61098d565b005b6101f360048036038101906101ee9190611a31565b610a1f565b005b61020f600480360381019061020a9190611a91565b610a95565b60405161021c9190611828565b60405180910390f35b61023f600480360381019061023a9190611b16565b610ad2565b005b61025b60048036038101906102569190611b69565b610be2565b6040516102689190611c1e565b60405180910390f35b61028b60048036038101906102869190611c40565b610ca7565b005b6102a760048036038101906102a29190611a91565b610d3d565b6040516102b49190611c1e565b60405180910390f35b6102d760048036038101906102d29190611b69565b610de2565b005b6102f360048036038101906102ee9190611a91565b610e58565b6040516103009190611cb4565b60405180910390f35b610323600480360381019061031e9190611a91565b610efd565b604051610331929190611ce5565b60405180910390f35b610354600480360381019061034f9190611d0e565b610f37565b005b610370600480360381019061036b9190611d4e565b610fd9565b005b61038c60048036038101906103879190611da1565b6110eb565b604051610399919061165c565b60405180910390f35b60006103ad82611127565b9050919050565b846103be81611188565b6103c757600080fd5b82826006600089815260200190815260200160002087876040516103ec929190611e33565b90815260200160405180910390209182610407929190612092565b508484604051610418929190611e33565b6040518091039020867fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a7550878760405161045292919061218f565b60405180910390a3505050505050565b600080600360008581526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105275780915050610853565b600061053285610a95565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361057357600092505050610853565b6000808273ffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b6040516024016105a591906121c2565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161062f9190612219565b600060405180830381855afa9150503d806000811461066a576040519150601f19603f3d011682016040523d82523d6000602084013e61066f565b606091505b5091509150811580610682575060208151105b806106d05750600060f81b81601f815181106106a1576106a0612230565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156106e2576000945050505050610853565b8273ffffffffffffffffffffffffffffffffffffffff168660405160240161070a91906121c2565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107949190612219565b600060405180830381855afa9150503d80600081146107cf576040519150601f19603f3d011682016040523d82523d6000602084013e6107d4565b606091505b5080925081935050508115806107eb575060208151105b806108395750600060f81b81601f8151811061080a57610809612230565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561084b576000945050505050610853565b829450505050505b92915050565b60006060600080600086815260200190815260200160002090506000600190505b84811161096d576000858216141580156108b25750600082600083815260200190815260200160002080546108ae90611eb5565b9050115b1561096157808260008381526020019081526020016000208080546108d690611eb5565b80601f016020809104026020016040519081016040528092919081815260200182805461090290611eb5565b801561094f5780601f106109245761010080835404028352916020019161094f565b820191906000526020600020905b81548152906001019060200180831161093257829003601f168201915b50505050509050935093505050610986565b600181901b905061087a565b5060006040518060200160405280600081525092509250505b9250929050565b8261099781611188565b6109a057600080fd5b604051806040016040528084815260200183815250600560008681526020019081526020016000206000820151816000015560208201518160010155905050837f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e468484604051610a11929190611ce5565b60405180910390a250505050565b82610a2981611188565b610a3257600080fd5b8282600260008781526020019081526020016000209182610a549291906122c5565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d75788484604051610a879291906123c2565b60405180910390a250505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b806008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847fe1c5610a6e0cbe10764ecd182adcef1ec338dc4e199c99c32ce98f38e12791df84604051610bd5919061165c565b60405180910390a4505050565b6060600660008581526020019081526020016000208383604051610c07929190611e33565b90815260200160405180910390208054610c2090611eb5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4c90611eb5565b8015610c995780601f10610c6e57610100808354040283529160200191610c99565b820191906000526020600020905b815481529060010190602001808311610c7c57829003601f168201915b505050505090509392505050565b83610cb181611188565b610cba57600080fd5b600084600186610cca9190612415565b1614610cd557600080fd5b828260008088815260200190815260200160002060008781526020019081526020016000209182610d079291906122c5565b5083857faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a35050505050565b6060600460008381526020019081526020016000208054610d5d90611eb5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8990611eb5565b8015610dd65780601f10610dab57610100808354040283529160200191610dd6565b820191906000526020600020905b815481529060010190602001808311610db957829003601f168201915b50505050509050919050565b82610dec81611188565b610df557600080fd5b8282600460008781526020019081526020016000209182610e17929190612092565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f78484604051610e4a92919061218f565b60405180910390a250505050565b6060600260008381526020019081526020016000208054610e7890611eb5565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea490611eb5565b8015610ef15780601f10610ec657610100808354040283529160200191610ef1565b820191906000526020600020905b815481529060010190602001808311610ed457829003601f168201915b50505050509050919050565b6000806005600084815260200190815260200160002060000154600560008581526020019081526020016000206001015491509150915091565b81610f4181611188565b610f4a57600080fd5b816001600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd283604051610fcc9190611828565b60405180910390a2505050565b82610fe381611188565b610fec57600080fd5b81600360008681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa846040516110dd9190611828565b60405180910390a350505050565b6008602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60006359d1d43c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611181575061118082611302565b5b9050919050565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b81526004016111e69190612449565b602060405180830381865afa158015611203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112279190612479565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806112fa57506008600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b600063c869023360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061135c575061135b82611363565b5b9050919050565b600063691f343160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113bd57506113bc826113c4565b5b9050919050565b60007f124a319c1247f4318c3c16c7e9cc865d0fb5d80d7bf02f56cafc0d14da0208507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061143757506114368261143e565b5b9050919050565b600063bc1c58d160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061149857506114978261149f565b5b9050919050565b6000633b3b57de60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114f957506114f882611500565b5b9050919050565b6000632203ab5660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061155a575061155982611561565b5b9050919050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115f1816115bc565b81146115fc57600080fd5b50565b60008135905061160e816115e8565b92915050565b60006020828403121561162a576116296115b2565b5b6000611638848285016115ff565b91505092915050565b60008115159050919050565b61165681611641565b82525050565b6000602082019050611671600083018461164d565b92915050565b6000819050919050565b61168a81611677565b811461169557600080fd5b50565b6000813590506116a781611681565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126116d2576116d16116ad565b5b8235905067ffffffffffffffff8111156116ef576116ee6116b2565b5b60208301915083600182028301111561170b5761170a6116b7565b5b9250929050565b60008060008060006060868803121561172e5761172d6115b2565b5b600061173c88828901611698565b955050602086013567ffffffffffffffff81111561175d5761175c6115b7565b5b611769888289016116bc565b9450945050604086013567ffffffffffffffff81111561178c5761178b6115b7565b5b611798888289016116bc565b92509250509295509295909350565b600080604083850312156117be576117bd6115b2565b5b60006117cc85828601611698565b92505060206117dd858286016115ff565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611812826117e7565b9050919050565b61182281611807565b82525050565b600060208201905061183d6000830184611819565b92915050565b6000819050919050565b61185681611843565b811461186157600080fd5b50565b6000813590506118738161184d565b92915050565b600080604083850312156118905761188f6115b2565b5b600061189e85828601611698565b92505060206118af85828601611864565b9150509250929050565b6118c281611843565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119025780820151818401526020810190506118e7565b60008484015250505050565b6000601f19601f8301169050919050565b600061192a826118c8565b61193481856118d3565b93506119448185602086016118e4565b61194d8161190e565b840191505092915050565b600060408201905061196d60008301856118b9565b818103602083015261197f818461191f565b90509392505050565b6000806000606084860312156119a1576119a06115b2565b5b60006119af86828701611698565b93505060206119c086828701611698565b92505060406119d186828701611698565b9150509250925092565b60008083601f8401126119f1576119f06116ad565b5b8235905067ffffffffffffffff811115611a0e57611a0d6116b2565b5b602083019150836001820283011115611a2a57611a296116b7565b5b9250929050565b600080600060408486031215611a4a57611a496115b2565b5b6000611a5886828701611698565b935050602084013567ffffffffffffffff811115611a7957611a786115b7565b5b611a85868287016119db565b92509250509250925092565b600060208284031215611aa757611aa66115b2565b5b6000611ab584828501611698565b91505092915050565b611ac781611807565b8114611ad257600080fd5b50565b600081359050611ae481611abe565b92915050565b611af381611641565b8114611afe57600080fd5b50565b600081359050611b1081611aea565b92915050565b600080600060608486031215611b2f57611b2e6115b2565b5b6000611b3d86828701611698565b9350506020611b4e86828701611ad5565b9250506040611b5f86828701611b01565b9150509250925092565b600080600060408486031215611b8257611b816115b2565b5b6000611b9086828701611698565b935050602084013567ffffffffffffffff811115611bb157611bb06115b7565b5b611bbd868287016116bc565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000611bf082611bc9565b611bfa8185611bd4565b9350611c0a8185602086016118e4565b611c138161190e565b840191505092915050565b60006020820190508181036000830152611c388184611be5565b905092915050565b60008060008060608587031215611c5a57611c596115b2565b5b6000611c6887828801611698565b9450506020611c7987828801611864565b935050604085013567ffffffffffffffff811115611c9a57611c996115b7565b5b611ca6878288016119db565b925092505092959194509250565b60006020820190508181036000830152611cce818461191f565b905092915050565b611cdf81611677565b82525050565b6000604082019050611cfa6000830185611cd6565b611d076020830184611cd6565b9392505050565b60008060408385031215611d2557611d246115b2565b5b6000611d3385828601611698565b9250506020611d4485828601611ad5565b9150509250929050565b600080600060608486031215611d6757611d666115b2565b5b6000611d7586828701611698565b9350506020611d86868287016115ff565b9250506040611d9786828701611ad5565b9150509250925092565b600080600060608486031215611dba57611db96115b2565b5b6000611dc886828701611698565b9350506020611dd986828701611ad5565b9250506040611dea86828701611ad5565b9150509250925092565b600081905092915050565b82818337600083830152505050565b6000611e1a8385611df4565b9350611e27838584611dff565b82840190509392505050565b6000611e40828486611e0e565b91508190509392505050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ecd57607f821691505b602082108103611ee057611edf611e86565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611f487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f0b565b611f528683611f0b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611f8f611f8a611f8584611843565b611f6a565b611843565b9050919050565b6000819050919050565b611fa983611f74565b611fbd611fb582611f96565b848454611f18565b825550505050565b600090565b611fd2611fc5565b611fdd818484611fa0565b505050565b5b8181101561200157611ff6600082611fca565b600181019050611fe3565b5050565b601f8211156120465761201781611ee6565b61202084611efb565b8101602085101561202f578190505b61204361203b85611efb565b830182611fe2565b50505b505050565b600082821c905092915050565b60006120696000198460080261204b565b1980831691505092915050565b60006120828383612058565b9150826002028217905092915050565b61209c8383611e4c565b67ffffffffffffffff8111156120b5576120b4611e57565b5b6120bf8254611eb5565b6120ca828285612005565b6000601f8311600181146120f957600084156120e7578287013590505b6120f18582612076565b865550612159565b601f19841661210786611ee6565b60005b8281101561212f5784890135825560018201915060208501945060208101905061210a565b8683101561214c5784890135612148601f891682612058565b8355505b6001600288020188555050505b50505050505050565b600061216e8385611bd4565b935061217b838584611dff565b6121848361190e565b840190509392505050565b600060208201905081810360008301526121aa818486612162565b90509392505050565b6121bc816115bc565b82525050565b60006020820190506121d760008301846121b3565b92915050565b600081905092915050565b60006121f3826118c8565b6121fd81856121dd565b935061220d8185602086016118e4565b80840191505092915050565b600061222582846121e8565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082905092915050565b60008190508160005260206000209050919050565b601f8211156122c0576122918161226a565b61229a84611efb565b810160208510156122a9578190505b6122bd6122b585611efb565b830182611fe2565b50505b505050565b6122cf838361225f565b67ffffffffffffffff8111156122e8576122e7611e57565b5b6122f28254611eb5565b6122fd82828561227f565b6000601f83116001811461232c576000841561231a578287013590505b6123248582612076565b86555061238c565b601f19841661233a8661226a565b60005b828110156123625784890135825560018201915060208501945060208101905061233d565b8683101561237f578489013561237b601f891682612058565b8355505b6001600288020188555050505b50505050505050565b60006123a183856118d3565b93506123ae838584611dff565b6123b78361190e565b840190509392505050565b600060208201905081810360008301526123dd818486612395565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061242082611843565b915061242b83611843565b9250828203905081811115612443576124426123e6565b5b92915050565b600060208201905061245e6000830184611cd6565b92915050565b60008151905061247381611abe565b92915050565b60006020828403121561248f5761248e6115b2565b5b600061249d84828501612464565b9150509291505056fea2646970667358221220ee310f3bee845fa61136f4f2cdf3d88444f3547c2b72b08d58a4c866aa77d5f564736f6c63430008130033";

type PublicResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PublicResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PublicResolver__factory extends ContractFactory {
  constructor(...args: PublicResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ens: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ens, overrides || {});
  }
  override deploy(
    _ens: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ens, overrides || {}) as Promise<
      PublicResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PublicResolver__factory {
    return super.connect(runner) as PublicResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PublicResolverInterface {
    return new Interface(_abi) as PublicResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PublicResolver {
    return new Contract(address, _abi, runner) as unknown as PublicResolver;
  }
}
