/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReverseRegistrar,
  ReverseRegistrarInterface,
} from "../ReverseRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "ensAddr",
        type: "address",
      },
      {
        internalType: "contract Resolver",
        name: "resolverAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDR_REVERSE_NODE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "defaultResolver",
    outputs: [
      {
        internalType: "contract Resolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolver",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNameFor",
    outputs: [
      {
        internalType: "bytes32",
        name: "reverseNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b8138038062001b81833981810160405281019062000037919062000303565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6040518263ffffffff1660e01b815260040162000139919062000365565b602060405180830381865afa15801562000157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017d9190620003b3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000237578073ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b8152600401620001ef9190620003f6565b6020604051808303816000875af11580156200020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000235919062000444565b505b50505062000476565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002728262000245565b9050919050565b6000620002868262000265565b9050919050565b620002988162000279565b8114620002a457600080fd5b50565b600081519050620002b8816200028d565b92915050565b6000620002cb8262000265565b9050919050565b620002dd81620002be565b8114620002e957600080fd5b50565b600081519050620002fd81620002d2565b92915050565b600080604083850312156200031d576200031c62000240565b5b60006200032d85828601620002a7565b92505060206200034085828601620002ec565b9150509250929050565b6000819050919050565b6200035f816200034a565b82525050565b60006020820190506200037c600083018462000354565b92915050565b6200038d8162000265565b81146200039957600080fd5b50565b600081519050620003ad8162000382565b92915050565b600060208284031215620003cc57620003cb62000240565b5b6000620003dc848285016200039c565b91505092915050565b620003f08162000265565b82525050565b60006020820190506200040d6000830184620003e5565b92915050565b6200041e816200034a565b81146200042a57600080fd5b50565b6000815190506200043e8162000413565b92915050565b6000602082840312156200045d576200045c62000240565b5b60006200046d848285016200042d565b91505092915050565b6116fb80620004866000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637cf8a2eb1161005b5780637cf8a2eb1461013b578063828eab0e14610159578063bffbe61c14610177578063c47f0027146101a757610088565b80630f5a54661461008d5780631e83409a146100bd5780633f15457f146100ed57806346b99be41461010b575b600080fd5b6100a760048036038101906100a29190610f17565b6101d7565b6040516100b49190610f70565b60405180910390f35b6100d760048036038101906100d29190610f8b565b610644565b6040516100e49190610f70565b60405180910390f35b6100f5610658565b6040516101029190611017565b60405180910390f35b61012560048036038101906101209190611097565b61067c565b6040516101329190610f70565b60405180910390f35b610143610cc8565b6040516101509190610f70565b60405180910390f35b610161610cef565b60405161016e9190611118565b60405180910390f35b610191600480360381019061018c9190610f8b565b610d15565b60405161019e9190610f70565b60405180910390f35b6101c160048036038101906101bc9190611274565b610d72565b6040516101ce9190610f70565b60405180910390f35b6000806101e333610e3b565b905060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b8260405160200161021d9291906112de565b60405160208183030381529060405280519060200120905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004016102919190610f70565b602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d2919061131f565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580156103d6575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf836040518263ffffffff1660e01b81526004016103659190610f70565b602060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a6919061131f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15610552573073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85306040518463ffffffff1660e01b815260040161048e9392919061135b565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050503090505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83876040518363ffffffff1660e01b815260040161051f929190611392565b600060405180830381600087803b15801561053957600080fd5b505af115801561054d573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106385760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85896040518463ffffffff1660e01b81526004016106059392919061135b565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b505050505b81935050505092915050565b60006106518260006101d7565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808473ffffffffffffffffffffffffffffffffffffffff163b116106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce90611418565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561073f57506040513d601f19601f8201168201806040525081019061073c919061131f565b60015b61077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906114aa565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e390611516565b60405180910390fd5b5060006107f885610e3b565b90507f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b816040516020016108309291906112de565b6040516020818303038152906040528051906020012091503073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b81526004016108b89190610f70565b602060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f9919061131f565b73ffffffffffffffffffffffffffffffffffffffff1614610ace5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83306040518463ffffffff1660e01b81526004016109949392919061135b565b600060405180830381600087803b1580156109ae57600080fd5b505af11580156109c2573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b8152600401610a369190610f70565b602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a77919061131f565b73ffffffffffffffffffffffffffffffffffffffff1614610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac4906115a8565b60405180910390fd5b5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401610b4b929190611392565b600060405180830381600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663773722138386866040518463ffffffff1660e01b8152600401610bdc939291906115f5565b600060405180830381600087803b158015610bf657600080fd5b505af1158015610c0a573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83336040518463ffffffff1660e01b8152600401610c8e9392919061135b565b600060405180830381600087803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b50505050509392505050565b7f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b81565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b610d4483610e3b565b604051602001610d559291906112de565b604051602081830303815290604052805190602001209050919050565b600080610da130600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101d7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637737221382856040518363ffffffff1660e01b8152600401610e00929190611695565b600060405180830381600087803b158015610e1a57600080fd5b505af1158015610e2e573d6000803e3d6000fd5b5050505080915050919050565b60007f303132333435363738396162636465660000000000000000000000000000000060285b6000811115610e975760018103905081600f85161a815360108404935060018103905081600f85161a8153601084049350610e61565b506028600020915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ee482610eb9565b9050919050565b610ef481610ed9565b8114610eff57600080fd5b50565b600081359050610f1181610eeb565b92915050565b60008060408385031215610f2e57610f2d610eaf565b5b6000610f3c85828601610f02565b9250506020610f4d85828601610f02565b9150509250929050565b6000819050919050565b610f6a81610f57565b82525050565b6000602082019050610f856000830184610f61565b92915050565b600060208284031215610fa157610fa0610eaf565b5b6000610faf84828501610f02565b91505092915050565b6000819050919050565b6000610fdd610fd8610fd384610eb9565b610fb8565b610eb9565b9050919050565b6000610fef82610fc2565b9050919050565b600061100182610fe4565b9050919050565b61101181610ff6565b82525050565b600060208201905061102c6000830184611008565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261105757611056611032565b5b8235905067ffffffffffffffff81111561107457611073611037565b5b6020830191508360018202830111156110905761108f61103c565b5b9250929050565b6000806000604084860312156110b0576110af610eaf565b5b60006110be86828701610f02565b935050602084013567ffffffffffffffff8111156110df576110de610eb4565b5b6110eb86828701611041565b92509250509250925092565b600061110282610fe4565b9050919050565b611112816110f7565b82525050565b600060208201905061112d6000830184611109565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61118182611138565b810181811067ffffffffffffffff821117156111a05761119f611149565b5b80604052505050565b60006111b3610ea5565b90506111bf8282611178565b919050565b600067ffffffffffffffff8211156111df576111de611149565b5b6111e882611138565b9050602081019050919050565b82818337600083830152505050565b6000611217611212846111c4565b6111a9565b90508281526020810184848401111561123357611232611133565b5b61123e8482856111f5565b509392505050565b600082601f83011261125b5761125a611032565b5b813561126b848260208601611204565b91505092915050565b60006020828403121561128a57611289610eaf565b5b600082013567ffffffffffffffff8111156112a8576112a7610eb4565b5b6112b484828501611246565b91505092915050565b6000819050919050565b6112d86112d382610f57565b6112bd565b82525050565b60006112ea82856112c7565b6020820191506112fa82846112c7565b6020820191508190509392505050565b60008151905061131981610eeb565b92915050565b60006020828403121561133557611334610eaf565b5b60006113438482850161130a565b91505092915050565b61135581610ed9565b82525050565b60006060820190506113706000830186610f61565b61137d6020830185610f61565b61138a604083018461134c565b949350505050565b60006040820190506113a76000830185610f61565b6113b4602083018461134c565b9392505050565b600082825260208201905092915050565b7f4164647220646562652073657220636f6e747261746f00000000000000000000600082015250565b60006114026016836113bb565b915061140d826113cc565b602082019050919050565b60006020820190508181036000830152611431816113f5565b9050919050565b7f456c20636f6e747261746f206e6f20696d706c656d656e746120494f776e616260008201527f6c6520636f7272656374616d656e746500000000000000000000000000000000602082015250565b60006114946030836113bb565b915061149f82611438565b604082019050919050565b600060208201905081810360008301526114c381611487565b9050919050565b7f4e6f20736f7320656c206f776e65722064656c20636f6e747261746f00000000600082015250565b6000611500601c836113bb565b915061150b826114ca565b602082019050919050565b6000602082019050818103600083015261152f816114f3565b9050919050565b7f4e6f207365207075646f20746f6d617220636f6e74726f6c2064656c206e6f6460008201527f6f20454e53000000000000000000000000000000000000000000000000000000602082015250565b60006115926025836113bb565b915061159d82611536565b604082019050919050565b600060208201905081810360008301526115c181611585565b9050919050565b60006115d483856113bb565b93506115e18385846111f5565b6115ea83611138565b840190509392505050565b600060408201905061160a6000830186610f61565b818103602083015261161d8184866115c8565b9050949350505050565b600081519050919050565b60005b83811015611650578082015181840152602081019050611635565b60008484015250505050565b600061166782611627565b61167181856113bb565b9350611681818560208601611632565b61168a81611138565b840191505092915050565b60006040820190506116aa6000830185610f61565b81810360208301526116bc818461165c565b9050939250505056fea2646970667358221220b36070e294721522f786a0c499621512cb11b5355869a4a42a09553981be12dc64736f6c63430008130033";

type ReverseRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseRegistrar__factory extends ContractFactory {
  constructor(...args: ReverseRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ensAddr, resolverAddr, overrides || {});
  }
  override deploy(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ensAddr, resolverAddr, overrides || {}) as Promise<
      ReverseRegistrar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReverseRegistrar__factory {
    return super.connect(runner) as ReverseRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseRegistrarInterface {
    return new Interface(_abi) as ReverseRegistrarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReverseRegistrar {
    return new Contract(address, _abi, runner) as unknown as ReverseRegistrar;
  }
}
