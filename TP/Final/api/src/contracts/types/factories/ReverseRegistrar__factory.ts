/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReverseRegistrar,
  ReverseRegistrarInterface,
} from "../ReverseRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "ensAddr",
        type: "address",
      },
      {
        internalType: "contract Resolver",
        name: "resolverAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDR_REVERSE_NODE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "defaultResolver",
    outputs: [
      {
        internalType: "contract Resolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolver",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNameFor",
    outputs: [
      {
        internalType: "bytes32",
        name: "reverseNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200184738038062001847833981810160405281019062000037919062000303565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6040518263ffffffff1660e01b815260040162000139919062000365565b602060405180830381865afa15801562000157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017d9190620003b3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000237578073ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b8152600401620001ef9190620003f6565b6020604051808303816000875af11580156200020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000235919062000444565b505b50505062000476565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002728262000245565b9050919050565b6000620002868262000265565b9050919050565b620002988162000279565b8114620002a457600080fd5b50565b600081519050620002b8816200028d565b92915050565b6000620002cb8262000265565b9050919050565b620002dd81620002be565b8114620002e957600080fd5b50565b600081519050620002fd81620002d2565b92915050565b600080604083850312156200031d576200031c62000240565b5b60006200032d85828601620002a7565b92505060206200034085828601620002ec565b9150509250929050565b6000819050919050565b6200035f816200034a565b82525050565b60006020820190506200037c600083018462000354565b92915050565b6200038d8162000265565b81146200039957600080fd5b50565b600081519050620003ad8162000382565b92915050565b600060208284031215620003cc57620003cb62000240565b5b6000620003dc848285016200039c565b91505092915050565b620003f08162000265565b82525050565b60006020820190506200040d6000830184620003e5565b92915050565b6200041e816200034a565b81146200042a57600080fd5b50565b6000815190506200043e8162000413565b92915050565b6000602082840312156200045d576200045c62000240565b5b60006200046d848285016200042d565b91505092915050565b6113c180620004866000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063828eab0e1161005b578063828eab0e146101295780638a34b12c14610147578063bffbe61c14610177578063c47f0027146101a757610088565b80630f5a54661461008d5780631e83409a146100bd5780633f15457f146100ed5780637cf8a2eb1461010b575b600080fd5b6100a760048036038101906100a29190610dc5565b6101d7565b6040516100b49190610e1e565b60405180910390f35b6100d760048036038101906100d29190610e39565b610644565b6040516100e49190610e1e565b60405180910390f35b6100f5610658565b6040516101029190610ec5565b60405180910390f35b61011361067c565b6040516101209190610e1e565b60405180910390f35b6101316106a3565b60405161013e9190610f01565b60405180910390f35b610161600480360381019061015c9190610f81565b6106c9565b60405161016e9190610e1e565b60405180910390f35b610191600480360381019061018c9190610e39565b6109f6565b60405161019e9190610e1e565b60405180910390f35b6101c160048036038101906101bc9190611136565b610a53565b6040516101ce9190610e1e565b60405180910390f35b6000806101e333610b1c565b905060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b8260405160200161021d9291906111a0565b60405160208183030381529060405280519060200120905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004016102919190610e1e565b602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d291906111e1565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580156103d6575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf836040518263ffffffff1660e01b81526004016103659190610e1e565b602060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a691906111e1565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15610552573073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85306040518463ffffffff1660e01b815260040161048e9392919061121d565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050503090505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83876040518363ffffffff1660e01b815260040161051f929190611254565b600060405180830381600087803b15801561053957600080fd5b505af115801561054d573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106385760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85896040518463ffffffff1660e01b81526004016106059392919061121d565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b505050505b81935050505092915050565b60006106518260006101d7565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b81565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106d586610b1c565b90507f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b8160405160200161070d9291906111a0565b60405160208183030381529060405280519060200120915061072e81610b86565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016107ab929190611254565b600060405180830381600087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663773722138386866040518463ffffffff1660e01b815260040161083c939291906112bb565b600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004016108c79190610e1e565b602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090891906111e1565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109ed5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83886040518463ffffffff1660e01b81526004016109ba9392919061121d565b600060405180830381600087803b1580156109d457600080fd5b505af11580156109e8573d6000803e3d6000fd5b505050505b50949350505050565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b610a2583610b1c565b604051602001610a369291906111a0565b604051602081830303815290604052805190602001209050919050565b600080610a8230600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101d7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637737221382856040518363ffffffff1660e01b8152600401610ae192919061135b565b600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b5050505080915050919050565b60007f303132333435363738396162636465660000000000000000000000000000000060285b6000811115610b785760018103905081600f85161a815360108404935060018103905081600f85161a8153601084049350610b42565b506028600020915050919050565b3073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b84604051602001610c0f9291906111a0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610c419190610e1e565b602060405180830381865afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8291906111e1565b73ffffffffffffffffffffffffffffffffffffffff1614610d505760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83306040518463ffffffff1660e01b8152600401610d1d9392919061121d565b600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b505050505b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d9282610d67565b9050919050565b610da281610d87565b8114610dad57600080fd5b50565b600081359050610dbf81610d99565b92915050565b60008060408385031215610ddc57610ddb610d5d565b5b6000610dea85828601610db0565b9250506020610dfb85828601610db0565b9150509250929050565b6000819050919050565b610e1881610e05565b82525050565b6000602082019050610e336000830184610e0f565b92915050565b600060208284031215610e4f57610e4e610d5d565b5b6000610e5d84828501610db0565b91505092915050565b6000819050919050565b6000610e8b610e86610e8184610d67565b610e66565b610d67565b9050919050565b6000610e9d82610e70565b9050919050565b6000610eaf82610e92565b9050919050565b610ebf81610ea4565b82525050565b6000602082019050610eda6000830184610eb6565b92915050565b6000610eeb82610e92565b9050919050565b610efb81610ee0565b82525050565b6000602082019050610f166000830184610ef2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f4157610f40610f1c565b5b8235905067ffffffffffffffff811115610f5e57610f5d610f21565b5b602083019150836001820283011115610f7a57610f79610f26565b5b9250929050565b60008060008060608587031215610f9b57610f9a610d5d565b5b6000610fa987828801610db0565b9450506020610fba87828801610db0565b935050604085013567ffffffffffffffff811115610fdb57610fda610d62565b5b610fe787828801610f2b565b925092505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104382610ffa565b810181811067ffffffffffffffff821117156110625761106161100b565b5b80604052505050565b6000611075610d53565b9050611081828261103a565b919050565b600067ffffffffffffffff8211156110a1576110a061100b565b5b6110aa82610ffa565b9050602081019050919050565b82818337600083830152505050565b60006110d96110d484611086565b61106b565b9050828152602081018484840111156110f5576110f4610ff5565b5b6111008482856110b7565b509392505050565b600082601f83011261111d5761111c610f1c565b5b813561112d8482602086016110c6565b91505092915050565b60006020828403121561114c5761114b610d5d565b5b600082013567ffffffffffffffff81111561116a57611169610d62565b5b61117684828501611108565b91505092915050565b6000819050919050565b61119a61119582610e05565b61117f565b82525050565b60006111ac8285611189565b6020820191506111bc8284611189565b6020820191508190509392505050565b6000815190506111db81610d99565b92915050565b6000602082840312156111f7576111f6610d5d565b5b6000611205848285016111cc565b91505092915050565b61121781610d87565b82525050565b60006060820190506112326000830186610e0f565b61123f6020830185610e0f565b61124c604083018461120e565b949350505050565b60006040820190506112696000830185610e0f565b611276602083018461120e565b9392505050565b600082825260208201905092915050565b600061129a838561127d565b93506112a78385846110b7565b6112b083610ffa565b840190509392505050565b60006040820190506112d06000830186610e0f565b81810360208301526112e381848661128e565b9050949350505050565b600081519050919050565b60005b838110156113165780820151818401526020810190506112fb565b60008484015250505050565b600061132d826112ed565b611337818561127d565b93506113478185602086016112f8565b61135081610ffa565b840191505092915050565b60006040820190506113706000830185610e0f565b81810360208301526113828184611322565b9050939250505056fea26469706673582212204bf57d7b2ab47ec1004d7a03a2bb056987676c2c6d7acbd9b6a562545b13571a64736f6c63430008130033";

type ReverseRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseRegistrar__factory extends ContractFactory {
  constructor(...args: ReverseRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ensAddr, resolverAddr, overrides || {});
  }
  override deploy(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ensAddr, resolverAddr, overrides || {}) as Promise<
      ReverseRegistrar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReverseRegistrar__factory {
    return super.connect(runner) as ReverseRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseRegistrarInterface {
    return new Interface(_abi) as ReverseRegistrarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReverseRegistrar {
    return new Contract(address, _abi, runner) as unknown as ReverseRegistrar;
  }
}
