/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReverseRegistrar,
  ReverseRegistrarInterface,
} from "../ReverseRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "ensAddr",
        type: "address",
      },
      {
        internalType: "contract Resolver",
        name: "resolverAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDR_REVERSE_NODE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "defaultResolver",
    outputs: [
      {
        internalType: "contract Resolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolver",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNameFor",
    outputs: [
      {
        internalType: "bytes32",
        name: "reverseNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a5538038062001a55833981810160405281019062000037919062000303565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6040518263ffffffff1660e01b815260040162000139919062000365565b602060405180830381865afa15801562000157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017d9190620003b3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000237578073ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b8152600401620001ef9190620003f6565b6020604051808303816000875af11580156200020f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000235919062000444565b505b50505062000476565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002728262000245565b9050919050565b6000620002868262000265565b9050919050565b620002988162000279565b8114620002a457600080fd5b50565b600081519050620002b8816200028d565b92915050565b6000620002cb8262000265565b9050919050565b620002dd81620002be565b8114620002e957600080fd5b50565b600081519050620002fd81620002d2565b92915050565b600080604083850312156200031d576200031c62000240565b5b60006200032d85828601620002a7565b92505060206200034085828601620002ec565b9150509250929050565b6000819050919050565b6200035f816200034a565b82525050565b60006020820190506200037c600083018462000354565b92915050565b6200038d8162000265565b81146200039957600080fd5b50565b600081519050620003ad8162000382565b92915050565b600060208284031215620003cc57620003cb62000240565b5b6000620003dc848285016200039c565b91505092915050565b620003f08162000265565b82525050565b60006020820190506200040d6000830184620003e5565b92915050565b6200041e816200034a565b81146200042a57600080fd5b50565b6000815190506200043e8162000413565b92915050565b6000602082840312156200045d576200045c62000240565b5b60006200046d848285016200042d565b91505092915050565b6115cf80620004866000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063828eab0e1161005b578063828eab0e146101295780638a34b12c14610147578063bffbe61c14610177578063c47f0027146101a757610088565b80630f5a54661461008d5780631e83409a146100bd5780633f15457f146100ed5780637cf8a2eb1461010b575b600080fd5b6100a760048036038101906100a29190610efb565b6101d7565b6040516100b49190610f54565b60405180910390f35b6100d760048036038101906100d29190610f6f565b610644565b6040516100e49190610f54565b60405180910390f35b6100f5610658565b6040516101029190610ffb565b60405180910390f35b61011361067c565b6040516101209190610f54565b60405180910390f35b6101316106a3565b60405161013e9190611037565b60405180910390f35b610161600480360381019061015c91906110b7565b6106c9565b60405161016e9190610f54565b60405180910390f35b610191600480360381019061018c9190610f6f565b610b2c565b60405161019e9190610f54565b60405180910390f35b6101c160048036038101906101bc919061126c565b610b89565b6040516101ce9190610f54565b60405180910390f35b6000806101e333610c52565b905060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b8260405160200161021d9291906112d6565b60405160208183030381529060405280519060200120905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004016102919190610f54565b602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190611317565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580156103d6575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf836040518263ffffffff1660e01b81526004016103659190610f54565b602060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190611317565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b15610552573073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85306040518463ffffffff1660e01b815260040161048e93929190611353565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050503090505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83876040518363ffffffff1660e01b815260040161051f92919061138a565b600060405180830381600087803b15801561053957600080fd5b505af115801561054d573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106385760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b85896040518463ffffffff1660e01b815260040161060593929190611353565b600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b505050505b81935050505092915050565b60006106518260006101d7565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b81565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808573ffffffffffffffffffffffffffffffffffffffff163b11610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90611410565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa9190611317565b73ffffffffffffffffffffffffffffffffffffffff1614610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f79061147c565b60405180910390fd5b600061080b86610c52565b90507f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b816040516020016108439291906112d6565b60405160208183030381529060405280519060200120915061086481610cbc565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016108e192919061138a565b600060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663773722138386866040518463ffffffff1660e01b8152600401610972939291906114c9565b600060405180830381600087803b15801561098c57600080fd5b505af11580156109a0573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004016109fd9190610f54565b602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611317565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b235760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83886040518463ffffffff1660e01b8152600401610af093929190611353565b600060405180830381600087803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b505050505b50949350505050565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b610b5b83610c52565b604051602001610b6c9291906112d6565b604051602081830303815290604052805190602001209050919050565b600080610bb830600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101d7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637737221382856040518363ffffffff1660e01b8152600401610c17929190611569565b600060405180830381600087803b158015610c3157600080fd5b505af1158015610c45573d6000803e3d6000fd5b5050505080915050919050565b60007f303132333435363738396162636465660000000000000000000000000000000060285b6000811115610cae5760018103905081600f85161a815360108404935060018103905081600f85161a8153601084049350610c78565b506028600020915050919050565b3073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be37f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b84604051602001610d459291906112d6565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610d779190610f54565b602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db89190611317565b73ffffffffffffffffffffffffffffffffffffffff1614610e865760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83306040518463ffffffff1660e01b8152600401610e5393929190611353565b600060405180830381600087803b158015610e6d57600080fd5b505af1158015610e81573d6000803e3d6000fd5b505050505b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ec882610e9d565b9050919050565b610ed881610ebd565b8114610ee357600080fd5b50565b600081359050610ef581610ecf565b92915050565b60008060408385031215610f1257610f11610e93565b5b6000610f2085828601610ee6565b9250506020610f3185828601610ee6565b9150509250929050565b6000819050919050565b610f4e81610f3b565b82525050565b6000602082019050610f696000830184610f45565b92915050565b600060208284031215610f8557610f84610e93565b5b6000610f9384828501610ee6565b91505092915050565b6000819050919050565b6000610fc1610fbc610fb784610e9d565b610f9c565b610e9d565b9050919050565b6000610fd382610fa6565b9050919050565b6000610fe582610fc8565b9050919050565b610ff581610fda565b82525050565b60006020820190506110106000830184610fec565b92915050565b600061102182610fc8565b9050919050565b61103181611016565b82525050565b600060208201905061104c6000830184611028565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261107757611076611052565b5b8235905067ffffffffffffffff81111561109457611093611057565b5b6020830191508360018202830111156110b0576110af61105c565b5b9250929050565b600080600080606085870312156110d1576110d0610e93565b5b60006110df87828801610ee6565b94505060206110f087828801610ee6565b935050604085013567ffffffffffffffff81111561111157611110610e98565b5b61111d87828801611061565b925092505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61117982611130565b810181811067ffffffffffffffff8211171561119857611197611141565b5b80604052505050565b60006111ab610e89565b90506111b78282611170565b919050565b600067ffffffffffffffff8211156111d7576111d6611141565b5b6111e082611130565b9050602081019050919050565b82818337600083830152505050565b600061120f61120a846111bc565b6111a1565b90508281526020810184848401111561122b5761122a61112b565b5b6112368482856111ed565b509392505050565b600082601f83011261125357611252611052565b5b81356112638482602086016111fc565b91505092915050565b60006020828403121561128257611281610e93565b5b600082013567ffffffffffffffff8111156112a05761129f610e98565b5b6112ac8482850161123e565b91505092915050565b6000819050919050565b6112d06112cb82610f3b565b6112b5565b82525050565b60006112e282856112bf565b6020820191506112f282846112bf565b6020820191508190509392505050565b60008151905061131181610ecf565b92915050565b60006020828403121561132d5761132c610e93565b5b600061133b84828501611302565b91505092915050565b61134d81610ebd565b82525050565b60006060820190506113686000830186610f45565b6113756020830185610f45565b6113826040830184611344565b949350505050565b600060408201905061139f6000830185610f45565b6113ac6020830184611344565b9392505050565b600082825260208201905092915050565b7f4164647220646562652073657220636f6e747261746f00000000000000000000600082015250565b60006113fa6016836113b3565b9150611405826113c4565b602082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f4e6f20736f7320656c206f776e65722064656c20636f6e747261746f00000000600082015250565b6000611466601c836113b3565b915061147182611430565b602082019050919050565b6000602082019050818103600083015261149581611459565b9050919050565b60006114a883856113b3565b93506114b58385846111ed565b6114be83611130565b840190509392505050565b60006040820190506114de6000830186610f45565b81810360208301526114f181848661149c565b9050949350505050565b600081519050919050565b60005b83811015611524578082015181840152602081019050611509565b60008484015250505050565b600061153b826114fb565b61154581856113b3565b9350611555818560208601611506565b61155e81611130565b840191505092915050565b600060408201905061157e6000830185610f45565b81810360208301526115908184611530565b9050939250505056fea2646970667358221220fbb6cf80ff23c8a0d0c233ae589a9417aa95bc3a556a47d4081dbeae069fb64664736f6c63430008130033";

type ReverseRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseRegistrar__factory extends ContractFactory {
  constructor(...args: ReverseRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ensAddr, resolverAddr, overrides || {});
  }
  override deploy(
    ensAddr: AddressLike,
    resolverAddr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ensAddr, resolverAddr, overrides || {}) as Promise<
      ReverseRegistrar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReverseRegistrar__factory {
    return super.connect(runner) as ReverseRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseRegistrarInterface {
    return new Interface(_abi) as ReverseRegistrarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReverseRegistrar {
    return new Contract(address, _abi, runner) as unknown as ReverseRegistrar;
  }
}
